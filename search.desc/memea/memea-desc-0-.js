searchState.loadedDescShard("memea", 0, "MemEA - Memory Peripheral Estimation and Analysis Library\nCSV export error.\nConfiguration file parsing error.\nDatabase operation error.\nUser interaction error from dialoguer.\nFile completion handler for interactive prompts.\nFloating-point type used throughout MemEA for measurements …\nGDS library error from the gds21 crate.\nGDS parsing-specific error from the gds module.\nStandard I/O error (file operations, etc.).\nASCII art logo for the MemEA application.\nLEF file parsing error.\nComprehensive error type for all MemEA operations.\nType representing memory array dimensions as (rows, …\nRequire explicit user input (no default).\nDefault to “no” if user presses enter without input.\nGeneral parsing error with custom message.\nFloating-point parsing error.\nInteger parsing error.\nDefault response options for user queries.\nRepresents a numeric range with minimum and maximum values.\nJSON serialization/deserialization error.\nYAML serialization/deserialization error.\nCurrent version of the MemEA library.\nDefault to “yes” if user presses enter without input.\nInternal macro for colored log message formatting.\nCreates a formatted horizontal bar for terminal output.\nConfiguration management for MemEA memory peripheral …\nDatabase management for MemEA memory peripheral components.\nMacro for creating formatted error literals with red …\nMacro for printing error messages in red without newline.\nMacro for printing error messages in red with newline.\nExport functionality for MemEA analysis results.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGDS layout file processing for MemEA component enclosure …\nReturns the scaling factor for a given technology node.\nMacro for printing informational messages in green without …\nMacro for printing informational messages in green with …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLEF file parsing and database creation for MemEA memory …\nMaximum value of the range.\nMinimum value of the range.\nParses a range from a string containing two comma or …\nParses a tuple of two floating-point values from a string.\nPrompts the user for a yes/no response with optional …\nCalculates scaling factor between two technology nodes.\nMacro for conditional verbose printing - only prints if …\nMacro for printing warning messages in yellow without …\nMacro for printing warning messages in yellow with newline.\nRepresents one memory configuration for peripheral …\nErrors that can occur during configuration processing.\nA collection of memory configurations indexed by name.\nIndicates that a required configuration option was not …\nNumber of downstream analog-to-digital converters.\nNumber of bits required for ADCs.\nBitline voltages\nMemory cell type to use for estimation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSampling rate of the ADCs in Hz.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of columns in the memory array.\nNumber of rows in the memory array.\nName of the configuration. If not supplied, the file path …\nAdditional configuration options as key-value pairs.\nDeserializes a configuration from a YAML file.\nReads multiple configuration files and returns them …\nVoltages required for well biasing\nWordline voltages\nAnalog-to-Digital Converter (ADC) parameters.\nAnalog-to-Digital Converter type.\nEnumeration of component types available in the database.\nMemory core cell parameters.\nMemory core cell type.\nErrors that can occur during database operations.\nComponent database containing all available peripheral …\nPhysical dimensions of a component including size and …\nIndicates an unsupported file format was encountered.\nLogic block parameters.\nLogic block type.\nIndicates that a requested cell was not found in the …\nIndicates that no cells matching the criteria were found.\nSwitch component parameters.\nSwitch component type.\nCollection of ADC components indexed by name.\nAdds a new ADC component to the database via interactive …\nAdds a new core cell to the database via interactive …\nAdds a new logic block to the database via interactive …\nAdds a new switch component to the database via …\nCalculates the total area occupied by an array of …\nNumber of bits this logic block can decode\nBuilds a database by deserializing from a YAML or JSON …\nCollection of memory core cells indexed by name.\nPhysical dimensions of the core cell\nPhysical dimensions of the logic block\nPhysical dimensions of the switch\nPhysical dimensions of the ADC\nPrints the dimensions in a human-readable format.\nDrive strength of the logic block\nDrive strength of the switch\nRequired bitline drive strength\nRequred wordline drive strength\nHorizontal and vertical enclosure requirements in …\nResolution as effective number of bits\nReturns the argument unchanged.\nCreates a new <code>Dims</code> instance with specified dimensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMaximum operating frequency in Hz\nMaximum sampling frequency in Hz\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollection of logic blocks indexed by name.\nCreates a new <code>Dims</code> instance with zero dimensions.\nCreates a new empty database.\nPrompts the user for input and parses it to the specified …\nSaves the database to a file in YAML or JSON format.\nWidth and height of the component in micrometers [width, …\nCollection of switch components indexed by name.\nChecks if a file path has a supported extension for …\nVoltage range as [minimum, maximum] in volts\nWrites a database to file with overwrite confirmation if …\nCalculates the total area from a collection of reports.\nExports analysis results to various formats based on file …\nExports reports to CSV format with configuration names …\nExports reports in human-readable table format to stdout.\nExports reports to JSON format with pretty printing.\nExports reports to YAML format.\nFormats reports into a human-readable table string.\nIndicates that a GDS element contains no geometry data.\nErrors that can occur during GDS layout processing.\nIndicates that a requested cell was not found in the GDS …\nAugments component dimensions with enclosure data from GDS …\nComputes enclosure requirements from GDS geometry elements.\nReturns the argument unchanged.\nCreates a hashmap of GDS library cells indexed by name for …\nCalls <code>U::from(self)</code>.\nIndicates that a MACRO line in the LEF file is malformed.\nIndicates that a SIZE line in the LEF file cannot be …\nErrors that can occur during LEF file parsing.\nInteractively adds a cell to the database with user …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInteractive LEF file processing workflow.\nParses width and height from a LEF SIZE line using regex.\nReads and processes a LEF file to create a component …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")